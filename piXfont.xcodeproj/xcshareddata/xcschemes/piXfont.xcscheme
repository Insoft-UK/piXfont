<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1630"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "84764224189579CD00AFBE9C"
               BuildableName = "piXfont"
               BlueprintName = "piXfont"
               ReferencedContainer = "container:piXfont.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES"
      viewDebuggingEnabled = "No">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "84764224189579CD00AFBE9C"
            BuildableName = "piXfont"
            BlueprintName = "piXfont"
            ReferencedContainer = "container:piXfont.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <CommandLineArguments>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/HD44780.bmp -f 32 -l 255 -w 5 -h 10 -F -i 3 -g v -H 1 -V 1 -x 1 -y 1"
            isEnabled = "YES">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/BBC.pbm -w 8 -h 16 -H 8 -F -u 0 -i 0"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/VGA.pbm -f 0 -l 255 -w 9 -h 16 -F -u 0 -s 9"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/EGA.pbm -f 0 -l 255 -w 8 -h 14 -V 2 -F -u 0 -s 8"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/CGA.pbm -f 0 -l 255 -w 8 -h 8 -F -u 0 -s 8"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/ARCADE.pbm -f 32 -l 140 -w 8 -h 8 -F -u 0"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/HD44780.h -g v"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_24pt0xXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_24pt0xE5XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_24pt0xE6XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_24pt0x7FXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_18pt0xXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_18pt0xE5XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_18pt0xE6XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_18pt0x7FXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_16pt0xXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_16pt0xE5XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_16pt0xE6XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_16pt0x7FXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_10pt0xXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_10pt0xE5XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_10pt0xE6XX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/fx-CG50/fxCG50_10pt0x7FXX.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/VGA.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/EGA.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/CGA.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/BBC.h"
            isEnabled = "NO">
         </CommandLineArgument>
         <CommandLineArgument
            argument = "$(PROJECT_DIR)/examples/ARCADE.h"
            isEnabled = "NO">
         </CommandLineArgument>
      </CommandLineArguments>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "84764224189579CD00AFBE9C"
            BuildableName = "piXfont"
            BlueprintName = "piXfont"
            ReferencedContainer = "container:piXfont.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
